[gd_scene load_steps=26 format=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 14

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 14

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 4

[sub_resource type="VisualShaderNodeVectorCompose" id=8]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTransformCompose" id=9]

[sub_resource type="VisualShaderNodeVectorCompose" id=10]

[sub_resource type="VisualShaderNodeVectorCompose" id=11]

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=15]
function = 19

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=17]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.5, -0.5, 0 ) ]

[sub_resource type="VisualShaderNodeTransformVecMult" id=18]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 0

[sub_resource type="VisualShaderNodeVectorLen" id=24]

[sub_resource type="VisualShaderNodeScalarOp" id=25]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=26]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=27]

[sub_resource type="VisualShaderNodeScalarConstant" id=19]
constant = 20.0

[sub_resource type="VisualShader" id=20]
code = "shader_type canvas_item;
render_mode unshaded;




void vertex() {
// Output:0

}

void fragment() {
// Input:30
	vec3 n_out30p0;
	n_out30p0 = vec3(UV,0.0);

// VectorOp:31
	vec3 n_in31p1 = vec3(-0.50000,-0.50000,0.00000);
	vec3 n_out31p0;
	n_out31p0 = n_out30p0 + n_in31p1;

// VectorLen:35
	float n_out35p0;
	n_out35p0 = length( n_out31p0 );

// ScalarOp:37
	float n_in37p0 = 1.00000;
	float n_out37p0;
	n_out37p0 = n_in37p0 - n_out35p0;

// Input:33
	float n_out33p0;
	n_out33p0 = TIME;

// ScalarFunc:34
	float n_out34p0;
	n_out34p0 = sin(n_out33p0);

// ScalarOp:36
	float n_out36p0;
	n_out36p0 = n_out37p0 * n_out34p0;

// ScalarFunc:27
	float n_out27p0;
	n_out27p0 = cos(n_out36p0);

// ScalarFunc:28
	float n_out28p0;
	n_out28p0 = sin(n_out36p0);

// VectorCompose:24
	float n_in24p2 = 0.00000;
	vec3 n_out24p0;
	n_out24p0 = vec3( n_out27p0 , n_out28p0 , n_in24p2 );

// ScalarFunc:29
	float n_out29p0;
	n_out29p0 = -(n_out28p0);

// VectorCompose:25
	float n_in25p2 = 0.00000;
	vec3 n_out25p0;
	n_out25p0 = vec3( n_out29p0 , n_out27p0 , n_in25p2 );

// TransformCompose:23
	vec3 n_in23p2 = vec3(0.00000,0.00000,0.00000);
	vec3 n_in23p3 = vec3(0.00000,0.00000,0.00000);
	mat4 n_out23p0;
	n_out23p0 = mat4( vec4(n_out24p0, 0.0) , vec4(n_out25p0, 0.0) , vec4(n_in23p2,0.0), vec4(n_in23p3,1.0) );

// TransformVectorMult:32
	vec3 n_out32p0;
	n_out32p0 = ( n_out23p0 * vec4(n_out31p0, 1.0) ).xyz;

// VectorDecompose:10
	float n_out10p0;
	float n_out10p1;
	float n_out10p2;
	n_out10p0 = n_out32p0.x;
	n_out10p1 = n_out32p0.y;
	n_out10p2 = n_out32p0.z;

// Scalar:6
	float n_out6p0;
	n_out6p0 = 20.000000;

// ScalarOp:11
	float n_out11p0;
	n_out11p0 = n_out10p0 * n_out6p0;

// ScalarFunc:13
	float n_out13p0;
	n_out13p0 = floor(n_out11p0);

// ScalarOp:12
	float n_out12p0;
	n_out12p0 = n_out10p1 * n_out6p0;

// ScalarFunc:14
	float n_out14p0;
	n_out14p0 = floor(n_out12p0);

// ScalarOp:38
	float n_out38p0;
	n_out38p0 = n_out13p0 + n_out14p0;

// ScalarOp:16
	float n_in16p1 = 2.00000;
	float n_out16p0;
	n_out16p0 = mod( n_out38p0 , n_in16p1 );

// VectorCompose:18
	vec3 n_out18p0;
	n_out18p0 = vec3( n_out16p0 , n_out16p0 , n_out16p0 );

// Output:0
	COLOR.rgb = n_out18p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 21.5632, -196.925 )
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/fragment/0/position = Vector2( 2660, -140 )
nodes/fragment/6/node = SubResource( 19 )
nodes/fragment/6/position = Vector2( 120, 100 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 20, -220 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 540, -220 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 540, 20 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 900, -180 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 900, 20 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 1700, -140 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 2100, -140 )
nodes/fragment/23/node = SubResource( 9 )
nodes/fragment/23/position = Vector2( -960, -420 )
nodes/fragment/24/node = SubResource( 10 )
nodes/fragment/24/position = Vector2( -1400, -500 )
nodes/fragment/25/node = SubResource( 11 )
nodes/fragment/25/position = Vector2( -1400, -280 )
nodes/fragment/27/node = SubResource( 13 )
nodes/fragment/27/position = Vector2( -1860, -420 )
nodes/fragment/28/node = SubResource( 14 )
nodes/fragment/28/position = Vector2( -1860, -280 )
nodes/fragment/29/node = SubResource( 15 )
nodes/fragment/29/position = Vector2( -1840, -20 )
nodes/fragment/30/node = SubResource( 16 )
nodes/fragment/30/position = Vector2( -3840, -960 )
nodes/fragment/31/node = SubResource( 17 )
nodes/fragment/31/position = Vector2( -3520, -960 )
nodes/fragment/32/node = SubResource( 18 )
nodes/fragment/32/position = Vector2( -440, -680 )
nodes/fragment/33/node = SubResource( 22 )
nodes/fragment/33/position = Vector2( -3260, -300 )
nodes/fragment/34/node = SubResource( 23 )
nodes/fragment/34/position = Vector2( -2920, -300 )
nodes/fragment/35/node = SubResource( 24 )
nodes/fragment/35/position = Vector2( -3360, -600 )
nodes/fragment/36/node = SubResource( 25 )
nodes/fragment/36/position = Vector2( -2520, -540 )
nodes/fragment/37/node = SubResource( 26 )
nodes/fragment/37/position = Vector2( -2980, -680 )
nodes/fragment/38/node = SubResource( 27 )
nodes/fragment/38/position = Vector2( 1340, -160 )
nodes/fragment/connections = PoolIntArray( 10, 0, 11, 0, 6, 0, 11, 1, 10, 1, 12, 0, 6, 0, 12, 1, 11, 0, 13, 0, 12, 0, 14, 0, 18, 0, 0, 0, 16, 0, 18, 0, 16, 0, 18, 1, 16, 0, 18, 2, 28, 0, 29, 0, 27, 0, 25, 1, 24, 0, 23, 0, 25, 0, 23, 1, 30, 0, 31, 0, 23, 0, 32, 0, 31, 0, 32, 1, 32, 0, 10, 0, 29, 0, 25, 0, 28, 0, 24, 1, 27, 0, 24, 0, 33, 0, 34, 0, 31, 0, 35, 0, 34, 0, 36, 1, 36, 0, 27, 0, 36, 0, 28, 0, 35, 0, 37, 1, 37, 0, 36, 0, 13, 0, 38, 0, 14, 0, 38, 1, 38, 0, 16, 0 )

[sub_resource type="ShaderMaterial" id=21]
shader = SubResource( 20 )

[node name="Visual" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ColorRect" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Canvas" type="ColorRect" parent="."]
material = SubResource( 21 )
margin_right = 600.0
margin_bottom = 600.0
__meta__ = {
"_edit_lock_": true
}

