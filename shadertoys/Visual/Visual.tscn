[gd_scene load_steps=17 format=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 14

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 14

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=7]

[sub_resource type="VisualShaderNodeVectorCompose" id=8]

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Constant" id=11]
constant = Vector3( 0.2, 0.1, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=12]

[sub_resource type="VisualShaderNodeVectorOp" id=13]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=14]
constant = 20.0

[sub_resource type="VisualShader" id=15]
code = "shader_type canvas_item;
render_mode unshaded;




void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Vector:20
	vec3 n_out20p0;
	n_out20p0 = vec3(0.200000,0.100000,0.000000);

// Input:19
	float n_out19p0;
	n_out19p0 = TIME;

// VectorOp:22
	vec3 n_out22p0;
	n_out22p0 = n_out20p0 * vec3(n_out19p0);

// VectorOp:21
	vec3 n_out21p0;
	n_out21p0 = n_out2p0 + n_out22p0;

// VectorDecompose:10
	float n_out10p0;
	float n_out10p1;
	float n_out10p2;
	n_out10p0 = n_out21p0.x;
	n_out10p1 = n_out21p0.y;
	n_out10p2 = n_out21p0.z;

// Scalar:6
	float n_out6p0;
	n_out6p0 = 20.000000;

// ScalarOp:11
	float n_out11p0;
	n_out11p0 = n_out10p0 * n_out6p0;

// ScalarFunc:13
	float n_out13p0;
	n_out13p0 = floor(n_out11p0);

// ScalarOp:12
	float n_out12p0;
	n_out12p0 = n_out10p1 * n_out6p0;

// ScalarFunc:14
	float n_out14p0;
	n_out14p0 = floor(n_out12p0);

// ScalarOp:17
	float n_out17p0;
	n_out17p0 = n_out13p0 + n_out14p0;

// ScalarOp:16
	float n_in16p1 = 2.00000;
	float n_out16p0;
	n_out16p0 = mod( n_out17p0 , n_in16p1 );

// VectorCompose:18
	vec3 n_out18p0;
	n_out18p0 = vec3( n_out16p0 , n_out16p0 , n_out16p0 );

// Output:0
	COLOR.rgb = n_out18p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 714.858, -52.11 )
mode = 1
flags/light_only = false
flags/unshaded = true
nodes/fragment/0/position = Vector2( 2900, 140 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -940, -40 )
nodes/fragment/6/node = SubResource( 14 )
nodes/fragment/6/position = Vector2( 200, 400 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 100, 80 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 620, 80 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 620, 320 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 980, 120 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 980, 340 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 1940, 140 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 1420, 160 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 2340, 140 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( -1060, 340 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( -1100, 160 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( -320, -40 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( -680, 160 )
nodes/fragment/connections = PoolIntArray( 10, 0, 11, 0, 6, 0, 11, 1, 10, 1, 12, 0, 6, 0, 12, 1, 11, 0, 13, 0, 12, 0, 14, 0, 18, 0, 0, 0, 13, 0, 17, 0, 14, 0, 17, 1, 17, 0, 16, 0, 16, 0, 18, 0, 16, 0, 18, 1, 16, 0, 18, 2, 2, 0, 21, 0, 21, 0, 10, 0, 20, 0, 22, 0, 19, 0, 22, 1, 22, 0, 21, 1 )

[sub_resource type="ShaderMaterial" id=16]
shader = SubResource( 15 )

[node name="Visual" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ColorRect" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Canvas" type="ColorRect" parent="."]
material = SubResource( 16 )
margin_right = 600.0
margin_bottom = 600.0
__meta__ = {
"_edit_lock_": true
}

