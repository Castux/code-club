[gd_scene load_steps=6 format=2]

[ext_resource path="res://Waves/Waves.shader" type="Shader" id=1]
[ext_resource path="res://Waves/Waves.gd" type="Script" id=2]

[sub_resource type="ShaderMaterial" id=1]
shader = ExtResource( 1 )
shader_param/ratio = 1.70667
shader_param/maxIter = 500
shader_param/precision = 0.01
shader_param/clip = 5000.0
shader_param/fov = 1.5
shader_param/time = 0.0
shader_param/camera = Vector3( 0, 45, 0 )
shader_param/cameraForward = Vector3( 1, -0.05, 1 )
shader_param/cameraUp = Vector3( 0, 1, 0 )
shader_param/sunDir = Vector3( 0, 0.289506, 1 )
shader_param/sunWidth = 31.3892
shader_param/fogWidth = 0.044
shader_param/fogColor = Color( 0.75911, 0.85137, 0.977802, 0.500125 )
shader_param/sunColor = Color( 1, 0.997478, 0.997478, 1 )
shader_param/skyColor = Color( 0.611375, 0.839746, 0.935424, 1 )
shader_param/waterColor = Color( 0.0186157, 0.220939, 0.238281, 1 )
shader_param/cloudColor = Color( 0.962163, 0.950559, 0.950559, 1 )

[sub_resource type="Animation" id=2]
resource_name = "DayNight"
length = 105.0
loop = true
step = 1.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:sunColor")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 5, 15, 20, 30, 35, 90, 100 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 0.666667, 0, 1 ), Color( 1, 0.972549, 0.917647, 1 ), Color( 1, 0.972549, 0.917647, 1 ), Color( 1, 0.972549, 0.917647, 1 ), Color( 1, 0.980392, 0.980392, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:sunDir")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.35, 1 ), Vector3( 0, 0.66, 1 ), Vector3( 0, 0.35, 1 ), Vector3( 0, 0.15, 1 ), Vector3( 0, 0, 1 ), Vector3( 0, -0.15, 1 ), Vector3( 0, -0.35, 1 ), Vector3( 0, -0.66, 1 ), Vector3( 0, -0.35, 1 ), Vector3( 0, -0.15, 1 ), Vector3( 0, 0, 1 ), Vector3( 0, 0.15, 1 ), Vector3( 0, 0.35, 1 ), Vector3( 0, 0.15, 1 ), Vector3( 0, 0, 1 ), Vector3( 0, -0.15, 1 ), Vector3( 0, -0.35, 1 ), Vector3( 0, -0.35, 1 ), Vector3( 0, -0.15, 1 ), Vector3( 0, 0, 1 ), Vector3( 0, 0.15, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:sunWidth")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 5, 15, 20, 25, 35, 90, 100 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 30.0, 30.0, 5.0, 50.0, 50.0, 50.0, 46.2731 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:fogWidth")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 5, 15, 20, 25, 35, 90, 100 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.04, 0.04, 0.064, 0.008, 0.008, 0.008, 0.08 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:fogColor")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 5, 15, 20, 30, 35, 90, 100 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0.74902, 0.854902, 1, 0.478431 ), Color( 0.74902, 0.854902, 1, 0.478431 ), Color( 0.333333, 0.266667, 0.156863, 0.654902 ), Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 0.827451, 0.827451, 0.827451, 0.647059 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:skyColor")
tracks/5/interp = 2
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 5, 15, 20, 30, 35, 90, 100 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0.607843, 0.890196, 1, 1 ), Color( 0.607843, 0.890196, 1, 1 ), Color( 0.827451, 0.0901961, 0.0901961, 1 ), Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 0.635294, 0.498039, 0.498039, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:cloudColor")
tracks/6/interp = 2
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 5, 15, 20, 30, 35, 90, 100 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 0.537255, 0.270588, 0.0313726, 1 ), Color( 0.231373, 0.231373, 0.231373, 1 ), Color( 0.231373, 0.231373, 0.231373, 1 ), Color( 0.231373, 0.231373, 0.231373, 1 ), Color( 0.705882, 0.615686, 0.615686, 1 ) ]
}

[sub_resource type="GDScript" id=3]
script/source = "extends Label

var secPerFrame = 0.0
var lastTime = 0.0

var show = true

func _ready():
	lastTime = OS.get_ticks_msec() / 1000.0

func _process(delta):
	
	var now = OS.get_ticks_msec() / 1000.0
	var d = now - lastTime
	
	secPerFrame += (d - secPerFrame) * 0.2  ## smoothing
	var fps = 1.0 / secPerFrame
	
	if show:
		text = str(round(fps), \" FPS\")
	else:
		text = \"\"
	
	lastTime = now

func _input(ev):
    if Input.is_key_pressed(KEY_SPACE):
        show = not show"

[node name="Canvas" type="ColorRect"]
material = SubResource( 1 )
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 2 )
__meta__ = {
"_edit_lock_": true
}
sunWidth = 31.3892
sunColor = Color( 1, 0.997478, 0.997478, 1 )
sunDir = Vector3( 0, 0.289506, 1 )
fogWidth = 0.044
fogColor = Color( 0.75911, 0.85137, 0.977802, 0.500125 )
skyColor = Color( 0.611375, 0.839746, 0.935424, 1 )
cloudColor = Color( 0.962163, 0.950559, 0.950559, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "DayNight"
anims/DayNight = SubResource( 2 )

[node name="FPSCounter" type="Label" parent="."]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -56.0
margin_bottom = 14.0
custom_colors/font_color = Color( 1, 0, 0, 1 )
text = "?? FPS"
script = SubResource( 3 )

[connection signal="item_rect_changed" from="." to="." method="updateRatio"]
